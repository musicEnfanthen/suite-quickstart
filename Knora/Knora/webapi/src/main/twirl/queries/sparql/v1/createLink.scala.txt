@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi._
@import org.knora.webapi.twirl.SparqlTemplateLinkUpdate
@import org.knora.webapi.messages.v1.responder.valuemessages._

@**
 * Inserts a new link between resources.
 *
 * @param dataNamedGraph    the named graph in which the project stores its data.
 * @param triplestore       the name of the triplestore being used.
 * @param resourceIri       the resource that is the source of the link.
 * @param linkUpdate        a [[LinkUpdate]] object describing the link to insert.
 * @param maybeComment      an optional comment on the link.
 *
 * To find out whether the update succeeded, the application must query the link.
 *@
@(dataNamedGraph: IRI,
  triplestore: String,
  resourceIri: IRI,
  linkUpdate: SparqlTemplateLinkUpdate,
  currentTime: String,
  maybeComment: Option[String])

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>

DELETE {
    GRAPH ?dataNamedGraph {
        @* Delete the link source's last modification date so we can update it. *@
        ?resource knora-base:lastModificationDate ?resourceLastModificationDate .
    }
} INSERT {
    GRAPH ?dataNamedGraph {
        @* Update the link source's last modification date. *@
        ?resource knora-base:lastModificationDate ?currentTime .

        @{
            queries.sparql.v1.txt.generateInsertStatementsForCreateLink(resourceIri = resourceIri,
                                                                        linkUpdate = linkUpdate,
                                                                        currentTime = currentTime,
                                                                        maybeComment = maybeComment,
                                                                        maybeValueHasOrder = None)
        }

    }
}
@* Ensure that inference is not used in the WHERE clause of this update. *@
@if(triplestore.startsWith("graphdb")) {
    USING <http://www.ontotext.com/explicit>
}
WHERE {
    BIND(IRI("@dataNamedGraph") AS ?dataNamedGraph)
    BIND(IRI("@resourceIri") AS ?resource)

    @* Do nothing if the resource doesn't exist, is marked as deleted, or isn't actually a resource. *@

    ?resource rdf:type ?resourceClass ;
        knora-base:isDeleted false .
    ?resourceClass rdfs:subClassOf* knora-base:Resource .

    @* Get the link source's last modification date, if it has one, so we can update it. *@

    OPTIONAL {
        ?resource knora-base:lastModificationDate ?resourceLastModificationDate .
    }

    @{
        queries.sparql.v1.txt.generateWhereStatementsForCreateLink(resourceIri = resourceIri,
                                                                   linkUpdate = linkUpdate)
    }
}
