@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi._

@**
 * Gets the outbound or inbound links from/to a resource. This query is used recursively to get a graph of
 * resources reachable from a given resource.
 *
 * If the triplestore type is GraphDB, this template delegates to getGraphDataGraphDB.sparql.txt, which is optimised
 * for GraphDB. Otherwise, it delegates to getGraphDataStandard.sparql.txt.
 *
 * @param triplestore the name of the triplestore being used.
 * @param startNodeIri the IRI of the resource to use as the starting point of the query.
 * @param startNodeOnly if true, returns information only about the start node.
 * @param outbound true to get outbound links, false to get inbound links.
 *@
@(triplestore: String,
  startNodeIri: IRI,
  startNodeOnly: Boolean,
  outbound: Boolean = true)

@if(triplestore.startsWith("graphdb")) {
    @{
        queries.sparql.v1.txt.getGraphDataGraphDB(startNodeIri = startNodeIri,
                                                  startNodeOnly = startNodeOnly,
                                                  outbound = outbound)
    }
} else {
    @{
        queries.sparql.v1.txt.getGraphDataStandard(triplestore = triplestore,
                                                   startNodeIri = startNodeIri,
                                                   startNodeOnly = startNodeOnly,
                                                   outbound = outbound)
    }
}
