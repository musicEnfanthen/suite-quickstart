@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Searches for a value in the version history of the values of a resource property. If the value is found, returns
 * all assertions about it. If the value is not found, returns no rows.
 *
 * @param triplestore the name of the triplestore being used.
 * @param resourceIri the resource to search.
 * @param propertyIri the property to search.
 * @param searchValueIri the IRI of the value to look for.
 *@
@(triplestore: String,
  resourceIri: IRI,
  propertyIri: IRI,
  searchValueIri: IRI)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?objPred ?objObj ?predStandoff ?objStandoff
@* Ensure that inference is not used in this query. *@
@if(triplestore.startsWith("graphdb")) {
    FROM <http://www.ontotext.com/explicit>
}
WHERE {
    BIND(IRI("@resourceIri") as ?resource)
    BIND(IRI("@propertyIri") as ?property)
    BIND(IRI("@searchValueIri") as ?searchValue)

    {
        ?resource ?property ?currentValue ;
            knora-base:isDeleted false .
        ?currentValue knora-base:previousValue* ?searchValue ;
            knora-base:isDeleted false .
        ?searchValue ?objPred ?objObj .

        FILTER(?objPred != knora-base:attachedToProject)

        OPTIONAL {
            FILTER(?objPred = knora-base:valueHasStandoff) .
            ?objObj ?predStandoff ?objStandoff .
        }
    }
    UNION
    {
        ?resource ?property ?currentValue ;
            knora-base:isDeleted false ;
            knora-base:attachedToProject ?resourceProject .
        ?currentValue knora-base:previousValue* ?searchValue ;
            knora-base:isDeleted false .

        @* Return the project of the resource that contains the value. *@

        BIND(knora-base:attachedToProject AS ?objPred)
        BIND(?resourceProject AS ?objObj)
    }
}
