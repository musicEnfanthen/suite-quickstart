@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Creates a new version of a value, with identical content except for a new comment.
 *
 * @param dataNamedGraph the named graph to update.
 * @param triplestore the name of the triplestore being used.
 * @param resourceIri the IRI of the resource containing the value.
 * @param propertyIri the IRI of the property that points from the resource to the value.
 * @param currentValueIri the IRI of the current version of the value.
 * @param newValueIri the IRI of the new version of the value.
 * @param maybeComment the new comment on the value.
 * @param currentTime an xsd:dateTimeStamp that will be attached to the resources.
 *@
@(dataNamedGraph: IRI,
  triplestore: String,
  resourceIri: IRI,
  propertyIri: IRI,
  currentValueIri: IRI,
  newValueIri: IRI,
  maybeComment: Option[String],
  currentTime: String)

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX knora-base: <http://www.knora.org/ontology/knora-base#>

DELETE {
    GRAPH ?dataNamedGraph {
        @* Detach the current version of the value from the resource. *@
        ?resource ?property ?currentValue .

        @* Delete the resource's last modification date so we can update it. *@
        ?resource knora-base:lastModificationDate ?resourceLastModificationDate .
    }
} INSERT {
    GRAPH ?dataNamedGraph {
        @* Copy the contents of the current version of the value into the new version, along with the new comment. *@
        ?newValue ?valuePred ?valueObj .
        ?newValue knora-base:previousValue ?currentValue ;

            @maybeComment match {

                case Some(comment) => {

                    knora-base:valueHasComment """@comment""" ;

                }

                case None => {}

            }

            knora-base:isDeleted false ;
            knora-base:valueCreationDate "@currentTime"^^xsd:dateTimeStamp .
        ?resource ?property ?newValue .

        @* Update the resource's last modification date. *@
        ?resource knora-base:lastModificationDate "@currentTime"^^xsd:dateTimeStamp .
    }
}
@* Ensure that inference is not used in the WHERE clause of this update. *@
@if(triplestore.startsWith("graphdb")) {
    USING <http://www.ontotext.com/explicit>
}
WHERE {
    BIND(IRI("@dataNamedGraph") AS ?dataNamedGraph)
    BIND(IRI("@resourceIri") AS ?resource)
    BIND(IRI("@propertyIri") AS ?property)
    BIND(IRI("@currentValueIri") AS ?currentValue)
    BIND(IRI("@newValueIri") AS ?newValue)

    ?resource rdf:type ?resourceClass ;
        knora-base:isDeleted false .
    ?resourceClass rdfs:subClassOf* knora-base:Resource .

    ?resource ?property ?currentValue .

    ?currentValue ?valuePred ?valueObj ;
        knora-base:isDeleted false .

    FILTER(!(?valuePred = knora-base:previousValue || ?valuePred = knora-base:valueCreationDate || ?valuePred = knora-base:valueHasComment))

    @* Get the resource's last modification date, if it has one, so we can update it. *@

    OPTIONAL {
        ?resource knora-base:lastModificationDate ?resourceLastModificationDate .
    }
}
