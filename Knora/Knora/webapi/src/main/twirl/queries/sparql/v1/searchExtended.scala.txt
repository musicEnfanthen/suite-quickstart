@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI
@import org.knora.webapi.twirl.SearchCriterion
@import org.knora.webapi.messages.v1.responder.searchmessages.SearchComparisonOperatorV1
@import org.knora.webapi.SparqlGenerationException

@**
 * Performs an extended search. The number of rows returned per matching resource is the product of the number of
 * values that each search criterion matched in the resource.
 *
 * If the triplestore type is GraphDB, this template delegates to searchExtendedGraphDB.sparql.txt, which is optimised
 * for GraphDB. Otherwise, it delegates to searchExtendedStandard.sparql.txt.
 *
 * @param triplestore the name of the triplestore being used.
 * @param searchCriteria a list of maps containing search criteria, each of which contains:
 * @param preferredLanguage the language code of the user's preferred language.
 * @param fallbackLanguage the language code of the application's default language.
 * @param projectIriOption if filtering by project is desired, the IRI of the project to search.
 * @param restypeIriOption if given, returns only resources of this class and its subclasses.
 * @param ownerIriOption if filtering by owner is desired, the IRI of the resource owner to search for.
 *@
@(triplestore: String,
  searchCriteria: Seq[SearchCriterion],
  preferredLanguage: String,
  fallbackLanguage: String,
  projectIriOption: Option[IRI],
  restypeIriOption: Option[IRI],
  ownerIriOption: Option[IRI])

@if(triplestore.startsWith("graphdb")) {
    @{
        queries.sparql.v1.txt.searchExtendedGraphDB(searchCriteria = searchCriteria,
                                                    preferredLanguage = preferredLanguage,
                                                    fallbackLanguage = fallbackLanguage,
                                                    projectIriOption = projectIriOption,
                                                    restypeIriOption = restypeIriOption,
                                                    ownerIriOption = ownerIriOption)
    }
} else {
    @{
        queries.sparql.v1.txt.searchExtendedStandard(triplestore = triplestore,
                                                     searchCriteria = searchCriteria,
                                                     preferredLanguage = preferredLanguage,
                                                     fallbackLanguage = fallbackLanguage,
                                                     projectIriOption = projectIriOption,
                                                     restypeIriOption = restypeIriOption,
                                                     ownerIriOption = ownerIriOption)
    }
}
