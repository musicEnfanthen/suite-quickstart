@*
 * Copyright Â© 2015-2018 the contributors (see Contributors.md).
 *
 * This file is part of Knora.
 *
 * Knora is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knora is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with Knora.  If not, see <http://www.gnu.org/licenses/>.
 *@

@import org.knora.webapi.IRI

@**
 * Queries a knora-base:Value using GraphDB.
 *
 * This template is used only by getValue.scala.txt.
 *
 * Since the triplestore type is GraphDB, we assume that inference is enabled, and we use it to optimise the generated
 * SPARQL. Specifically, we use inference to return search results matching subproperties of Knora base properties
 * such as knora-base:hasValue. This requires us to use GraphDB's GRAPH <http://www.ontotext.com/explicit>
 * whenever we need to get explicit (non-inferred) statements.
 *
 * @param iri the IRI of the Value.
 *@
@(valueIri: IRI)

prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix knora-base: <http://www.knora.org/ontology/knora-base#>

SELECT ?objPred ?objObj ?predStandoff ?objStandoff
WHERE {
    BIND(IRI("@valueIri") AS ?obj)

    ?resource knora-base:hasValue ?obj .

    {
        ?obj knora-base:isDeleted false .

        GRAPH <http://www.ontotext.com/explicit> {
            ?obj ?objPred ?objObj .
        }

        FILTER(?objPred != knora-base:attachedToProject)

        OPTIONAL {
            FILTER(?objPred = knora-base:valueHasStandoff)

            GRAPH <http://www.ontotext.com/explicit> {
                ?objObj ?predStandoff ?objStandoff .
            }
        }
    }
    UNION
    {
        @* Return the project of the resource that contains the value. *@

        ?obj knora-base:isDeleted false .
        ?resource knora-base:attachedToProject ?resourceProject .

        BIND(knora-base:attachedToProject AS ?objPred)
        BIND(?resourceProject AS ?objObj)
    }
}
